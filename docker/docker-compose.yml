version: '3.9'

services:
  dbhackathon:
    container_name: db_hackathon
    image: postgres:latest
    restart: unless-stopped
    networks:
      - hackathon_bridge
    tty: true
    environment:
      - POSTGRES_USER=${POSTGRES_DATABASE_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    ports:
      - "5455:5432"
    volumes:
      - ../../settings/postgress/consumer:/var/lib/postgresql/data/


  hackathon_producer:
    container_name: hackathon_producer
    build:
      context: ../hackathon-producer
      dockerfile: ./docker/Dockerfile
    working_dir: /producerservice
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    tty: true
    volumes:
      - ../hackathon-producer:/producerservice
    restart: unless-stopped
    ports:
      - "8989:8080"
    command: mvn clean spring-boot:run
    networks:
      - hackathon_bridge


  consumerservice:
    container_name: hackathon_consumer
    build:
      context: ../hackathon-consumer
      dockerfile: ./docker/Dockerfile
    working_dir: /consumerservice
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbhackathon:5432/${POSTGRES_DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_DATABASE_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - ../hackathon-consumer:/consumerservice
    tty: true
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - hackathon_bridge
    command: mvn clean spring-boot:run
    depends_on:
      - dbhackathon

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hackathon_bridge
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - hackathon_bridge
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://godsonpeya.ru:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ui:
    container_name: ui
    build:
      context: ../hackathon-frontend
      dockerfile: ./docker/Dockerfile
    tty: true
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - hackathon_bridge
networks:
  hackathon_bridge:
    driver: bridge